// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: tunnelrpc.capnp

package octi.wanparty.tunnelrpc;

@SuppressWarnings("all")
public final class TunnelRPC {
    public enum ExistingTunnelPolicy {
        IGNORE,
        DISCONNECT,
        BALANCE,
        _NOT_IN_SCHEMA,
    }

    public static class Authentication {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 3);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return Authentication.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasKey() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getKey() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setKey(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setKey(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initKey(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasEmail() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getEmail() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setEmail(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setEmail(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initEmail(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }

            public final boolean hasOriginCAKey() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.Text.Builder getOriginCAKey() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public final void setOriginCAKey(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 2, value);
            }

            public final void setOriginCAKey(String value) {
                _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initOriginCAKey(int size) {
                return _initPointerField(org.capnproto.Text.factory, 2, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasKey() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getKey() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasEmail() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getEmail() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public boolean hasOriginCAKey() {
                return !_pointerFieldIsNull(2);
            }

            public org.capnproto.Text.Reader getOriginCAKey() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

        }
    }

    public static class TunnelRegistration {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 6);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return TunnelRegistration.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setErr(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setErr(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initErr(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasUrl() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getUrl() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setUrl(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setUrl(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initUrl(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }

            public final boolean hasLogLines() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.TextList.Builder getLogLines() {
                return _getPointerField(org.capnproto.TextList.factory, 2, null, 0);
            }

            public final void setLogLines(org.capnproto.TextList.Reader value) {
                _setPointerField(org.capnproto.TextList.factory, 2, value);
            }

            public final org.capnproto.TextList.Builder initLogLines(int size) {
                return _initPointerField(org.capnproto.TextList.factory, 2, size);
            }

            public final boolean getPermanentFailure() {
                return _getBooleanField(0);
            }

            public final void setPermanentFailure(boolean value) {
                _setBooleanField(0, value);
            }

            public final boolean hasTunnelID() {
                return !_pointerFieldIsNull(3);
            }

            public final org.capnproto.Text.Builder getTunnelID() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public final void setTunnelID(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 3, value);
            }

            public final void setTunnelID(String value) {
                _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initTunnelID(int size) {
                return _initPointerField(org.capnproto.Text.factory, 3, size);
            }

            public final short getRetryAfterSeconds() {
                return _getShortField(1);
            }

            public final void setRetryAfterSeconds(short value) {
                _setShortField(1, value);
            }

            public final boolean hasEventDigest() {
                return !_pointerFieldIsNull(4);
            }

            public final org.capnproto.Data.Builder getEventDigest() {
                return _getPointerField(org.capnproto.Data.factory, 4, null, 0, 0);
            }

            public final void setEventDigest(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 4, value);
            }

            public final void setEventDigest(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 4, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initEventDigest(int size) {
                return _initPointerField(org.capnproto.Data.factory, 4, size);
            }

            public final boolean hasConnDigest() {
                return !_pointerFieldIsNull(5);
            }

            public final org.capnproto.Data.Builder getConnDigest() {
                return _getPointerField(org.capnproto.Data.factory, 5, null, 0, 0);
            }

            public final void setConnDigest(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 5, value);
            }

            public final void setConnDigest(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 5, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initConnDigest(int size) {
                return _initPointerField(org.capnproto.Data.factory, 5, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasUrl() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getUrl() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final boolean hasLogLines() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.TextList.Reader getLogLines() {
                return _getPointerField(org.capnproto.TextList.factory, 2, null, 0);
            }

            public final boolean getPermanentFailure() {
                return _getBooleanField(0);
            }

            public boolean hasTunnelID() {
                return !_pointerFieldIsNull(3);
            }

            public org.capnproto.Text.Reader getTunnelID() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public final short getRetryAfterSeconds() {
                return _getShortField(1);
            }

            public boolean hasEventDigest() {
                return !_pointerFieldIsNull(4);
            }

            public org.capnproto.Data.Reader getEventDigest() {
                return _getPointerField(org.capnproto.Data.factory, 4, null, 0, 0);
            }

            public boolean hasConnDigest() {
                return !_pointerFieldIsNull(5);
            }

            public org.capnproto.Data.Reader getConnDigest() {
                return _getPointerField(org.capnproto.Data.factory, 5, null, 0, 0);
            }

        }
    }

    public static class RegistrationOptions {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 2, (short) 8);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return RegistrationOptions.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasClientId() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getClientId() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setClientId(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setClientId(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initClientId(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasVersion() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getVersion() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setVersion(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setVersion(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initVersion(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }

            public final boolean hasOs() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.Text.Builder getOs() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public final void setOs(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 2, value);
            }

            public final void setOs(String value) {
                _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initOs(int size) {
                return _initPointerField(org.capnproto.Text.factory, 2, size);
            }

            public final octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy getExistingTunnelPolicy() {
                switch (_getShortField(0)) {
                    case 0:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.IGNORE;
                    case 1:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.DISCONNECT;
                    case 2:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.BALANCE;
                    default:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy._NOT_IN_SCHEMA;
                }
            }

            public final void setExistingTunnelPolicy(octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy value) {
                _setShortField(0, (short) value.ordinal());
            }

            public final boolean hasPoolName() {
                return !_pointerFieldIsNull(3);
            }

            public final org.capnproto.Text.Builder getPoolName() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public final void setPoolName(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 3, value);
            }

            public final void setPoolName(String value) {
                _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initPoolName(int size) {
                return _initPointerField(org.capnproto.Text.factory, 3, size);
            }

            public final boolean hasTags() {
                return !_pointerFieldIsNull(4);
            }

            public final org.capnproto.StructList.Builder<octi.wanparty.tunnelrpc.TunnelRPC.Tag.Builder> getTags() {
                return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.Tag.listFactory, 4, null, 0);
            }

            public final void setTags(org.capnproto.StructList.Reader<octi.wanparty.tunnelrpc.TunnelRPC.Tag.Reader> value) {
                _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.Tag.listFactory, 4, value);
            }

            public final org.capnproto.StructList.Builder<octi.wanparty.tunnelrpc.TunnelRPC.Tag.Builder> initTags(int size) {
                return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.Tag.listFactory, 4, size);
            }

            public final byte getConnectionId() {
                return _getByteField(2);
            }

            public final void setConnectionId(byte value) {
                _setByteField(2, value);
            }

            public final boolean hasOriginLocalIp() {
                return !_pointerFieldIsNull(5);
            }

            public final org.capnproto.Text.Builder getOriginLocalIp() {
                return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
            }

            public final void setOriginLocalIp(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 5, value);
            }

            public final void setOriginLocalIp(String value) {
                _setPointerField(org.capnproto.Text.factory, 5, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initOriginLocalIp(int size) {
                return _initPointerField(org.capnproto.Text.factory, 5, size);
            }

            public final boolean getIsAutoupdated() {
                return _getBooleanField(24);
            }

            public final void setIsAutoupdated(boolean value) {
                _setBooleanField(24, value);
            }

            public final boolean getRunFromTerminal() {
                return _getBooleanField(25);
            }

            public final void setRunFromTerminal(boolean value) {
                _setBooleanField(25, value);
            }

            public final long getCompressionQuality() {
                return _getLongField(1);
            }

            public final void setCompressionQuality(long value) {
                _setLongField(1, value);
            }

            public final boolean hasUuid() {
                return !_pointerFieldIsNull(6);
            }

            public final org.capnproto.Text.Builder getUuid() {
                return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
            }

            public final void setUuid(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 6, value);
            }

            public final void setUuid(String value) {
                _setPointerField(org.capnproto.Text.factory, 6, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initUuid(int size) {
                return _initPointerField(org.capnproto.Text.factory, 6, size);
            }

            public final byte getNumPreviousAttempts() {
                return _getByteField(4);
            }

            public final void setNumPreviousAttempts(byte value) {
                _setByteField(4, value);
            }

            public final boolean hasFeatures() {
                return !_pointerFieldIsNull(7);
            }

            public final org.capnproto.TextList.Builder getFeatures() {
                return _getPointerField(org.capnproto.TextList.factory, 7, null, 0);
            }

            public final void setFeatures(org.capnproto.TextList.Reader value) {
                _setPointerField(org.capnproto.TextList.factory, 7, value);
            }

            public final org.capnproto.TextList.Builder initFeatures(int size) {
                return _initPointerField(org.capnproto.TextList.factory, 7, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasClientId() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getClientId() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasVersion() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getVersion() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public boolean hasOs() {
                return !_pointerFieldIsNull(2);
            }

            public org.capnproto.Text.Reader getOs() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public final octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy getExistingTunnelPolicy() {
                switch (_getShortField(0)) {
                    case 0:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.IGNORE;
                    case 1:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.DISCONNECT;
                    case 2:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy.BALANCE;
                    default:
                        return octi.wanparty.tunnelrpc.TunnelRPC.ExistingTunnelPolicy._NOT_IN_SCHEMA;
                }
            }

            public boolean hasPoolName() {
                return !_pointerFieldIsNull(3);
            }

            public org.capnproto.Text.Reader getPoolName() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public final boolean hasTags() {
                return !_pointerFieldIsNull(4);
            }

            public final org.capnproto.StructList.Reader<octi.wanparty.tunnelrpc.TunnelRPC.Tag.Reader> getTags() {
                return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.Tag.listFactory, 4, null, 0);
            }

            public final byte getConnectionId() {
                return _getByteField(2);
            }

            public boolean hasOriginLocalIp() {
                return !_pointerFieldIsNull(5);
            }

            public org.capnproto.Text.Reader getOriginLocalIp() {
                return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
            }

            public final boolean getIsAutoupdated() {
                return _getBooleanField(24);
            }

            public final boolean getRunFromTerminal() {
                return _getBooleanField(25);
            }

            public final long getCompressionQuality() {
                return _getLongField(1);
            }

            public boolean hasUuid() {
                return !_pointerFieldIsNull(6);
            }

            public org.capnproto.Text.Reader getUuid() {
                return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
            }

            public final byte getNumPreviousAttempts() {
                return _getByteField(4);
            }

            public final boolean hasFeatures() {
                return !_pointerFieldIsNull(7);
            }

            public final org.capnproto.TextList.Reader getFeatures() {
                return _getPointerField(org.capnproto.TextList.factory, 7, null, 0);
            }

        }
    }

    public static class Tag {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 2);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return Tag.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasName() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getName() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setName(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setName(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initName(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasValue() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getValue() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setValue(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setValue(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initValue(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasName() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getName() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasValue() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getValue() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

        }
    }

    public static class ServerInfo {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ServerInfo.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasLocationName() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getLocationName() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setLocationName(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setLocationName(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initLocationName(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasLocationName() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getLocationName() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

        }
    }

    public static class AuthenticateResponse {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 3);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return AuthenticateResponse.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasPermanentErr() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getPermanentErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setPermanentErr(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setPermanentErr(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initPermanentErr(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasRetryableErr() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getRetryableErr() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setRetryableErr(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setRetryableErr(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initRetryableErr(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }

            public final boolean hasJwt() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.Data.Builder getJwt() {
                return _getPointerField(org.capnproto.Data.factory, 2, null, 0, 0);
            }

            public final void setJwt(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 2, value);
            }

            public final void setJwt(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 2, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initJwt(int size) {
                return _initPointerField(org.capnproto.Data.factory, 2, size);
            }

            public final byte getHoursUntilRefresh() {
                return _getByteField(0);
            }

            public final void setHoursUntilRefresh(byte value) {
                _setByteField(0, value);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasPermanentErr() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getPermanentErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasRetryableErr() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getRetryableErr() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public boolean hasJwt() {
                return !_pointerFieldIsNull(2);
            }

            public org.capnproto.Data.Reader getJwt() {
                return _getPointerField(org.capnproto.Data.factory, 2, null, 0, 0);
            }

            public final byte getHoursUntilRefresh() {
                return _getByteField(0);
            }

        }
    }

    public static class ClientInfo {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 4);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ClientInfo.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasClientId() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Data.Builder getClientId() {
                return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
            }

            public final void setClientId(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 0, value);
            }

            public final void setClientId(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initClientId(int size) {
                return _initPointerField(org.capnproto.Data.factory, 0, size);
            }

            public final boolean hasFeatures() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.TextList.Builder getFeatures() {
                return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
            }

            public final void setFeatures(org.capnproto.TextList.Reader value) {
                _setPointerField(org.capnproto.TextList.factory, 1, value);
            }

            public final org.capnproto.TextList.Builder initFeatures(int size) {
                return _initPointerField(org.capnproto.TextList.factory, 1, size);
            }

            public final boolean hasVersion() {
                return !_pointerFieldIsNull(2);
            }

            public final org.capnproto.Text.Builder getVersion() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public final void setVersion(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 2, value);
            }

            public final void setVersion(String value) {
                _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initVersion(int size) {
                return _initPointerField(org.capnproto.Text.factory, 2, size);
            }

            public final boolean hasArch() {
                return !_pointerFieldIsNull(3);
            }

            public final org.capnproto.Text.Builder getArch() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public final void setArch(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 3, value);
            }

            public final void setArch(String value) {
                _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initArch(int size) {
                return _initPointerField(org.capnproto.Text.factory, 3, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasClientId() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Data.Reader getClientId() {
                return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
            }

            public final boolean hasFeatures() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.TextList.Reader getFeatures() {
                return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
            }

            public boolean hasVersion() {
                return !_pointerFieldIsNull(2);
            }

            public org.capnproto.Text.Reader getVersion() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public boolean hasArch() {
                return !_pointerFieldIsNull(3);
            }

            public org.capnproto.Text.Reader getArch() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

        }
    }

    public static class ConnectionOptions {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 2);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
            default octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.Pipeline getClient() {
                org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                return () -> pipeline;
            }
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ConnectionOptions.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.Builder getClient() {
                return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.factory, 0, null, 0);
            }

            public final void setClient(octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.Reader value) {
                _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.factory, 0, value);
            }

            public final octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.Builder initClient() {
                return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.factory, 0, 0);
            }

            public final boolean hasOriginLocalIp() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Data.Builder getOriginLocalIp() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

            public final void setOriginLocalIp(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 1, value);
            }

            public final void setOriginLocalIp(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initOriginLocalIp(int size) {
                return _initPointerField(org.capnproto.Data.factory, 1, size);
            }

            public final boolean getReplaceExisting() {
                return _getBooleanField(0);
            }

            public final void setReplaceExisting(boolean value) {
                _setBooleanField(0, value);
            }

            public final byte getCompressionQuality() {
                return _getByteField(1);
            }

            public final void setCompressionQuality(byte value) {
                _setByteField(1, value);
            }

            public final byte getNumPreviousAttempts() {
                return _getByteField(2);
            }

            public final void setNumPreviousAttempts(byte value) {
                _setByteField(2, value);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasClient() {
                return !_pointerFieldIsNull(0);
            }

            public octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.Reader getClient() {
                return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ClientInfo.factory, 0, null, 0);
            }

            public boolean hasOriginLocalIp() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Data.Reader getOriginLocalIp() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

            public final boolean getReplaceExisting() {
                return _getBooleanField(0);
            }

            public final byte getCompressionQuality() {
                return _getByteField(1);
            }

            public final byte getNumPreviousAttempts() {
                return _getByteField(2);
            }

        }
    }

    public static class ConnectionResponse {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 1);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
            default Result.Pipeline getResult() {
                org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().noop();
                return () -> pipeline;
            }
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ConnectionResponse.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final Result.Builder getResult() {
                return new ConnectionResponse.Result.Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final Result.Builder initResult() {
                _setShortField(0, (short) 0);
                _clearPointerField(0);
                return new ConnectionResponse.Result.Builder(segment, data, pointers, dataSize, pointerCount);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Result.Reader getResult() {
                return new ConnectionResponse.Result.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

        }

        public static class Result {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public enum Which {
                ERROR,
                CONNECTION_DETAILS,
                _NOT_IN_SCHEMA,
            }

            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.Pipeline getError() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }

                default octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.Pipeline getConnectionDetails() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return ConnectionResponse.Result.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public Which which() {
                    switch (_getShortField(0)) {
                        case 0:
                            return Which.ERROR;
                        case 1:
                            return Which.CONNECTION_DETAILS;
                        default:
                            return Which._NOT_IN_SCHEMA;
                    }
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean isError() {
                    return which() == ConnectionResponse.Result.Which.ERROR;
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.Builder getError() {
                    assert which() == ConnectionResponse.Result.Which.ERROR :
                            "Must check which() before get()ing a union member.";
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.factory, 0, null, 0);
                }

                public final void setError(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.Reader value) {
                    _setShortField(0, (short) ConnectionResponse.Result.Which.ERROR.ordinal());
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.Builder initError() {
                    _setShortField(0, (short) ConnectionResponse.Result.Which.ERROR.ordinal());
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.factory, 0, 0);
                }

                public final boolean isConnectionDetails() {
                    return which() == ConnectionResponse.Result.Which.CONNECTION_DETAILS;
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.Builder getConnectionDetails() {
                    assert which() == ConnectionResponse.Result.Which.CONNECTION_DETAILS :
                            "Must check which() before get()ing a union member.";
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.factory, 0, null, 0);
                }

                public final void setConnectionDetails(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.Reader value) {
                    _setShortField(0, (short) ConnectionResponse.Result.Which.CONNECTION_DETAILS.ordinal());
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.Builder initConnectionDetails() {
                    _setShortField(0, (short) ConnectionResponse.Result.Which.CONNECTION_DETAILS.ordinal());
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch (_getShortField(0)) {
                        case 0:
                            return Which.ERROR;
                        case 1:
                            return Which.CONNECTION_DETAILS;
                        default:
                            return Which._NOT_IN_SCHEMA;
                    }
                }

                public final boolean isError() {
                    return which() == ConnectionResponse.Result.Which.ERROR;
                }

                public boolean hasError() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.Reader getError() {
                    assert which() == ConnectionResponse.Result.Which.ERROR :
                            "Must check which() before get()ing a union member.";
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionError.factory, 0, null, 0);
                }

                public final boolean isConnectionDetails() {
                    return which() == ConnectionResponse.Result.Which.CONNECTION_DETAILS;
                }

                public boolean hasConnectionDetails() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.Reader getConnectionDetails() {
                    assert which() == ConnectionResponse.Result.Which.CONNECTION_DETAILS :
                            "Must check which() before get()ing a union member.";
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionDetails.factory, 0, null, 0);
                }

            }
        }
    }

    public static class ConnectionError {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 2, (short) 1);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ConnectionError.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasCause() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getCause() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setCause(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setCause(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initCause(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final long getRetryAfter() {
                return _getLongField(0);
            }

            public final void setRetryAfter(long value) {
                _setLongField(0, value);
            }

            public final boolean getShouldRetry() {
                return _getBooleanField(64);
            }

            public final void setShouldRetry(boolean value) {
                _setBooleanField(64, value);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasCause() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getCause() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final long getRetryAfter() {
                return _getLongField(0);
            }

            public final boolean getShouldRetry() {
                return _getBooleanField(64);
            }

        }
    }

    public static class ConnectionDetails {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 2);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return ConnectionDetails.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasUuid() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Data.Builder getUuid() {
                return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
            }

            public final void setUuid(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 0, value);
            }

            public final void setUuid(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initUuid(int size) {
                return _initPointerField(org.capnproto.Data.factory, 0, size);
            }

            public final boolean hasLocationName() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Text.Builder getLocationName() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final void setLocationName(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }

            public final void setLocationName(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initLocationName(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }

            public final boolean getTunnelIsRemotelyManaged() {
                return _getBooleanField(0);
            }

            public final void setTunnelIsRemotelyManaged(boolean value) {
                _setBooleanField(0, value);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasUuid() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Data.Reader getUuid() {
                return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
            }

            public boolean hasLocationName() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Text.Reader getLocationName() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public final boolean getTunnelIsRemotelyManaged() {
                return _getBooleanField(0);
            }

        }
    }

    public static class TunnelAuth {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 2);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return TunnelAuth.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasAccountTag() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getAccountTag() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setAccountTag(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setAccountTag(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initAccountTag(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasTunnelSecret() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Data.Builder getTunnelSecret() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

            public final void setTunnelSecret(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 1, value);
            }

            public final void setTunnelSecret(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initTunnelSecret(int size) {
                return _initPointerField(org.capnproto.Data.factory, 1, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasAccountTag() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getAccountTag() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasTunnelSecret() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Data.Reader getTunnelSecret() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

        }
    }

    public static class RegistrationServer {
        public static final Factory factory = new Factory();

        public static final class Factory
                extends org.capnproto.Capability.Factory<Client> {
            public Factory() {
            }

            public final Client newClient(org.capnproto.ClientHook hook) {
                return new Client(hook);
            }
        }

        public static class Client
                extends org.capnproto.Capability.Client {
            public Client() {
            }

            public Client(org.capnproto.ClientHook hook) {
                super(hook);
            }

            public Client(org.capnproto.Capability.Client cap) {
                super(cap);
            }

            public Client(Server server) {
                super(server);
            }

            public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
                super(promise);
            }

            public Methods.registerConnection.Request registerConnectionRequest() {
                org.capnproto.Request<RegisterConnectionParams.Builder> result = newCall(RegisterConnectionParams.factory, 0xf71695ec7fe85497L, (short) 0);
                return () -> result;
            }

            public Methods.unregisterConnection.Request unregisterConnectionRequest() {
                org.capnproto.Request<UnregisterConnectionParams.Builder> result = newCall(UnregisterConnectionParams.factory, 0xf71695ec7fe85497L, (short) 1);
                return () -> result;
            }

            public Methods.updateLocalConfiguration.Request updateLocalConfigurationRequest() {
                org.capnproto.Request<UpdateLocalConfigurationParams.Builder> result = newCall(UpdateLocalConfigurationParams.factory, 0xf71695ec7fe85497L, (short) 2);
                return () -> result;
            }

            public static final class Methods {
                public static final class registerConnection {
                    public interface Request extends org.capnproto.Request<RegisterConnectionParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<RegisterConnectionResults.Reader>
                            implements RegisterConnectionResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(RegisterConnectionResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class unregisterConnection {
                    public interface Request extends org.capnproto.Request<UnregisterConnectionParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<UnregisterConnectionResults.Reader>
                            implements UnregisterConnectionResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(UnregisterConnectionResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class updateLocalConfiguration {
                    public interface Request extends org.capnproto.Request<UpdateLocalConfigurationParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<UpdateLocalConfigurationResults.Reader>
                            implements UpdateLocalConfigurationResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(UpdateLocalConfigurationResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }
            }
        }

        public static abstract class Server
                extends org.capnproto.Capability.Server {
            protected org.capnproto.DispatchCallResult dispatchCall(
                    long interfaceId, short methodId,
                    org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                if (interfaceId == 0xf71695ec7fe85497L) {
                    return this.dispatchCallInternal(methodId, context);
                } else {
                    return org.capnproto.Capability.Server.result(
                            org.capnproto.Capability.Server.internalUnimplemented("RegistrationServer", interfaceId));
                }
            }

            private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                switch (methodId) {
                    case 0:
                        return org.capnproto.Capability.Server.result(
                                this.registerConnection(org.capnproto.Capability.Server.internalGetTypedContext(
                                        RegisterConnectionParams.factory, RegisterConnectionResults.factory, context)));
                    case 1:
                        return org.capnproto.Capability.Server.result(
                                this.unregisterConnection(org.capnproto.Capability.Server.internalGetTypedContext(
                                        UnregisterConnectionParams.factory, UnregisterConnectionResults.factory, context)));
                    case 2:
                        return org.capnproto.Capability.Server.result(
                                this.updateLocalConfiguration(org.capnproto.Capability.Server.internalGetTypedContext(
                                        UpdateLocalConfigurationParams.factory, UpdateLocalConfigurationResults.factory, context)));
                    default:
                        return org.capnproto.Capability.Server.result(
                                org.capnproto.Capability.Server.internalUnimplemented("RegistrationServer", 0xf71695ec7fe85497L, methodId));
                }
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> registerConnection(org.capnproto.CallContext<RegisterConnectionParams.Reader, RegisterConnectionResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:RegistrationServer", "registerConnection", 0xf71695ec7fe85497L, (short) 0);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> unregisterConnection(org.capnproto.CallContext<UnregisterConnectionParams.Reader, UnregisterConnectionResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:RegistrationServer", "unregisterConnection", 0xf71695ec7fe85497L, (short) 1);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> updateLocalConfiguration(org.capnproto.CallContext<UpdateLocalConfigurationParams.Reader, UpdateLocalConfigurationResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:RegistrationServer", "updateLocalConfiguration", 0xf71695ec7fe85497L, (short) 2);
            }

            protected Client thisCap() {
                return new Client(super.thisCap());
            }
        }

        public static class RegisterConnectionParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 3);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.Pipeline getAuth() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }

                default octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.Pipeline getOptions() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 2);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.RegisterConnectionParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.Builder getAuth() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.factory, 0, null, 0);
                }

                public final void setAuth(octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.Builder initAuth() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.factory, 0, 0);
                }

                public final boolean hasTunnelId() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Data.Builder getTunnelId() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public final void setTunnelId(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 1, value);
                }

                public final void setTunnelId(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initTunnelId(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 1, size);
                }

                public final byte getConnIndex() {
                    return _getByteField(0);
                }

                public final void setConnIndex(byte value) {
                    _setByteField(0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.Builder getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.factory, 2, null, 0);
                }

                public final void setOptions(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.factory, 2, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.Builder initOptions() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.factory, 2, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasAuth() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.Reader getAuth() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelAuth.factory, 0, null, 0);
                }

                public boolean hasTunnelId() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Data.Reader getTunnelId() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public final byte getConnIndex() {
                    return _getByteField(0);
                }

                public boolean hasOptions() {
                    return !_pointerFieldIsNull(2);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.Reader getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionOptions.factory, 2, null, 0);
                }

            }
        }

        public static class RegisterConnectionResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.RegisterConnectionResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ConnectionResponse.factory, 0, null, 0);
                }

            }
        }

        public static class UnregisterConnectionParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.UnregisterConnectionParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class UnregisterConnectionResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.UnregisterConnectionResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class UpdateLocalConfigurationParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.UpdateLocalConfigurationParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasConfig() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getConfig() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setConfig(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setConfig(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initConfig(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasConfig() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getConfig() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

            }
        }

        public static class UpdateLocalConfigurationResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return RegistrationServer.UpdateLocalConfigurationResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }
    }

    public static class TunnelServer {
        public static final Factory factory = new Factory();

        public static final class Factory
                extends org.capnproto.Capability.Factory<Client> {
            public Factory() {
            }

            public final Client newClient(org.capnproto.ClientHook hook) {
                return new Client(hook);
            }
        }

        public static class Client
                extends octi.wanparty.tunnelrpc.TunnelRPC.RegistrationServer.Client {
            public Client() {
            }

            public Client(org.capnproto.ClientHook hook) {
                super(hook);
            }

            public Client(org.capnproto.Capability.Client cap) {
                super(cap);
            }

            public Client(Server server) {
                super(server);
            }

            public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
                super(promise);
            }

            public Methods.registerTunnel.Request registerTunnelRequest() {
                org.capnproto.Request<RegisterTunnelParams.Builder> result = newCall(RegisterTunnelParams.factory, 0xea58385c65416035L, (short) 0);
                return () -> result;
            }

            public Methods.getServerInfo.Request getServerInfoRequest() {
                org.capnproto.Request<GetServerInfoParams.Builder> result = newCall(GetServerInfoParams.factory, 0xea58385c65416035L, (short) 1);
                return () -> result;
            }

            public Methods.unregisterTunnel.Request unregisterTunnelRequest() {
                org.capnproto.Request<UnregisterTunnelParams.Builder> result = newCall(UnregisterTunnelParams.factory, 0xea58385c65416035L, (short) 2);
                return () -> result;
            }

            public Methods.obsoleteDeclarativeTunnelConnect.Request obsoleteDeclarativeTunnelConnectRequest() {
                org.capnproto.Request<ObsoleteDeclarativeTunnelConnectParams.Builder> result = newCall(ObsoleteDeclarativeTunnelConnectParams.factory, 0xea58385c65416035L, (short) 3);
                return () -> result;
            }

            public Methods.authenticate.Request authenticateRequest() {
                org.capnproto.Request<AuthenticateParams.Builder> result = newCall(AuthenticateParams.factory, 0xea58385c65416035L, (short) 4);
                return () -> result;
            }

            public Methods.reconnectTunnel.Request reconnectTunnelRequest() {
                org.capnproto.Request<ReconnectTunnelParams.Builder> result = newCall(ReconnectTunnelParams.factory, 0xea58385c65416035L, (short) 5);
                return () -> result;
            }

            public static final class Methods {
                public static final class registerTunnel {
                    public interface Request extends org.capnproto.Request<RegisterTunnelParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<RegisterTunnelResults.Reader>
                            implements RegisterTunnelResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(RegisterTunnelResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class getServerInfo {
                    public interface Request extends org.capnproto.Request<GetServerInfoParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<GetServerInfoResults.Reader>
                            implements GetServerInfoResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(GetServerInfoResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class unregisterTunnel {
                    public interface Request extends org.capnproto.Request<UnregisterTunnelParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<UnregisterTunnelResults.Reader>
                            implements UnregisterTunnelResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(UnregisterTunnelResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class obsoleteDeclarativeTunnelConnect {
                    public interface Request extends org.capnproto.Request<ObsoleteDeclarativeTunnelConnectParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<ObsoleteDeclarativeTunnelConnectResults.Reader>
                            implements ObsoleteDeclarativeTunnelConnectResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(ObsoleteDeclarativeTunnelConnectResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class authenticate {
                    public interface Request extends org.capnproto.Request<AuthenticateParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<AuthenticateResults.Reader>
                            implements AuthenticateResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(AuthenticateResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class reconnectTunnel {
                    public interface Request extends org.capnproto.Request<ReconnectTunnelParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<ReconnectTunnelResults.Reader>
                            implements ReconnectTunnelResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(ReconnectTunnelResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }
            }
        }

        public static abstract class Server
                extends octi.wanparty.tunnelrpc.TunnelRPC.RegistrationServer.Server {
            protected org.capnproto.DispatchCallResult dispatchCall(
                    long interfaceId, short methodId,
                    org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                if (interfaceId == 0xea58385c65416035L) {
                    return this.dispatchCallInternal(methodId, context);
                } else if (interfaceId == 0xf71695ec7fe85497L) {
                    return super.dispatchCall(interfaceId, methodId, context);
                } else {
                    return org.capnproto.Capability.Server.result(
                            org.capnproto.Capability.Server.internalUnimplemented("TunnelServer", interfaceId));
                }
            }

            private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                switch (methodId) {
                    case 0:
                        return org.capnproto.Capability.Server.result(
                                this.registerTunnel(org.capnproto.Capability.Server.internalGetTypedContext(
                                        RegisterTunnelParams.factory, RegisterTunnelResults.factory, context)));
                    case 1:
                        return org.capnproto.Capability.Server.result(
                                this.getServerInfo(org.capnproto.Capability.Server.internalGetTypedContext(
                                        GetServerInfoParams.factory, GetServerInfoResults.factory, context)));
                    case 2:
                        return org.capnproto.Capability.Server.result(
                                this.unregisterTunnel(org.capnproto.Capability.Server.internalGetTypedContext(
                                        UnregisterTunnelParams.factory, UnregisterTunnelResults.factory, context)));
                    case 3:
                        return org.capnproto.Capability.Server.result(
                                this.obsoleteDeclarativeTunnelConnect(org.capnproto.Capability.Server.internalGetTypedContext(
                                        ObsoleteDeclarativeTunnelConnectParams.factory, ObsoleteDeclarativeTunnelConnectResults.factory, context)));
                    case 4:
                        return org.capnproto.Capability.Server.result(
                                this.authenticate(org.capnproto.Capability.Server.internalGetTypedContext(
                                        AuthenticateParams.factory, AuthenticateResults.factory, context)));
                    case 5:
                        return org.capnproto.Capability.Server.result(
                                this.reconnectTunnel(org.capnproto.Capability.Server.internalGetTypedContext(
                                        ReconnectTunnelParams.factory, ReconnectTunnelResults.factory, context)));
                    default:
                        return org.capnproto.Capability.Server.result(
                                org.capnproto.Capability.Server.internalUnimplemented("TunnelServer", 0xea58385c65416035L, methodId));
                }
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> registerTunnel(org.capnproto.CallContext<RegisterTunnelParams.Reader, RegisterTunnelResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "registerTunnel", 0xea58385c65416035L, (short) 0);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> getServerInfo(org.capnproto.CallContext<GetServerInfoParams.Reader, GetServerInfoResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "getServerInfo", 0xea58385c65416035L, (short) 1);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> unregisterTunnel(org.capnproto.CallContext<UnregisterTunnelParams.Reader, UnregisterTunnelResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "unregisterTunnel", 0xea58385c65416035L, (short) 2);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> obsoleteDeclarativeTunnelConnect(org.capnproto.CallContext<ObsoleteDeclarativeTunnelConnectParams.Reader, ObsoleteDeclarativeTunnelConnectResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "obsoleteDeclarativeTunnelConnect", 0xea58385c65416035L, (short) 3);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> authenticate(org.capnproto.CallContext<AuthenticateParams.Reader, AuthenticateResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "authenticate", 0xea58385c65416035L, (short) 4);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> reconnectTunnel(org.capnproto.CallContext<ReconnectTunnelParams.Reader, ReconnectTunnelResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:TunnelServer", "reconnectTunnel", 0xea58385c65416035L, (short) 5);
            }

            protected Client thisCap() {
                return new Client(super.thisCap());
            }
        }

        public static class RegisterTunnelParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 3);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Pipeline getOptions() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 2);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.RegisterTunnelParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasOriginCert() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getOriginCert() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setOriginCert(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setOriginCert(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initOriginCert(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }

                public final boolean hasHostname() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Text.Builder getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public final void setHostname(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }

                public final void setHostname(String value) {
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }

                public final org.capnproto.Text.Builder initHostname(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, null, 0);
                }

                public final void setOptions(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder initOptions() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasOriginCert() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getOriginCert() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public boolean hasHostname() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Text.Reader getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public boolean hasOptions() {
                    return !_pointerFieldIsNull(2);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, null, 0);
                }

            }
        }

        public static class RegisterTunnelResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.RegisterTunnelResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, null, 0);
                }

            }
        }

        public static class GetServerInfoParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.GetServerInfoParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class GetServerInfoResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.GetServerInfoResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.ServerInfo.factory, 0, null, 0);
                }

            }
        }

        public static class UnregisterTunnelParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.UnregisterTunnelParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final long getGracePeriodNanoSec() {
                    return _getLongField(0);
                }

                public final void setGracePeriodNanoSec(long value) {
                    _setLongField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final long getGracePeriodNanoSec() {
                    return _getLongField(0);
                }

            }
        }

        public static class UnregisterTunnelResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.UnregisterTunnelResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class ObsoleteDeclarativeTunnelConnectParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.ObsoleteDeclarativeTunnelConnectParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class ObsoleteDeclarativeTunnelConnectResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.ObsoleteDeclarativeTunnelConnectResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }

        public static class AuthenticateParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 3);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Pipeline getOptions() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 2);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.AuthenticateParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasOriginCert() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getOriginCert() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setOriginCert(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setOriginCert(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initOriginCert(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }

                public final boolean hasHostname() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Text.Builder getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public final void setHostname(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }

                public final void setHostname(String value) {
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }

                public final org.capnproto.Text.Builder initHostname(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, null, 0);
                }

                public final void setOptions(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder initOptions() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasOriginCert() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getOriginCert() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public boolean hasHostname() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Text.Reader getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public boolean hasOptions() {
                    return !_pointerFieldIsNull(2);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 2, null, 0);
                }

            }
        }

        public static class AuthenticateResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.AuthenticateResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.AuthenticateResponse.factory, 0, null, 0);
                }

            }
        }

        public static class ReconnectTunnelParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 5);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Pipeline getOptions() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 4);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.ReconnectTunnelParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasJwt() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getJwt() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setJwt(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setJwt(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initJwt(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }

                public final boolean hasEventDigest() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Data.Builder getEventDigest() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public final void setEventDigest(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 1, value);
                }

                public final void setEventDigest(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initEventDigest(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 1, size);
                }

                public final boolean hasConnDigest() {
                    return !_pointerFieldIsNull(2);
                }

                public final org.capnproto.Data.Builder getConnDigest() {
                    return _getPointerField(org.capnproto.Data.factory, 2, null, 0, 0);
                }

                public final void setConnDigest(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 2, value);
                }

                public final void setConnDigest(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 2, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initConnDigest(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 2, size);
                }

                public final boolean hasHostname() {
                    return !_pointerFieldIsNull(3);
                }

                public final org.capnproto.Text.Builder getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
                }

                public final void setHostname(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 3, value);
                }

                public final void setHostname(String value) {
                    _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
                }

                public final org.capnproto.Text.Builder initHostname(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 3, size);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 4, null, 0);
                }

                public final void setOptions(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 4, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Builder initOptions() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 4, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasJwt() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getJwt() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public boolean hasEventDigest() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Data.Reader getEventDigest() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public boolean hasConnDigest() {
                    return !_pointerFieldIsNull(2);
                }

                public org.capnproto.Data.Reader getConnDigest() {
                    return _getPointerField(org.capnproto.Data.factory, 2, null, 0, 0);
                }

                public boolean hasHostname() {
                    return !_pointerFieldIsNull(3);
                }

                public org.capnproto.Text.Reader getHostname() {
                    return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
                }

                public boolean hasOptions() {
                    return !_pointerFieldIsNull(4);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.Reader getOptions() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegistrationOptions.factory, 4, null, 0);
                }

            }
        }

        public static class ReconnectTunnelResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return TunnelServer.ReconnectTunnelResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.TunnelRegistration.factory, 0, null, 0);
                }

            }
        }
    }

    public static class RegisterUdpSessionResponse {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 2);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return RegisterUdpSessionResponse.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setErr(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setErr(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initErr(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }

            public final boolean hasSpans() {
                return !_pointerFieldIsNull(1);
            }

            public final org.capnproto.Data.Builder getSpans() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

            public final void setSpans(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 1, value);
            }

            public final void setSpans(byte[] value) {
                _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
            }

            public final org.capnproto.Data.Builder initSpans(int size) {
                return _initPointerField(org.capnproto.Data.factory, 1, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasSpans() {
                return !_pointerFieldIsNull(1);
            }

            public org.capnproto.Data.Reader getSpans() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

        }
    }

    public static class SessionManager {
        public static final Factory factory = new Factory();

        public static final class Factory
                extends org.capnproto.Capability.Factory<Client> {
            public Factory() {
            }

            public final Client newClient(org.capnproto.ClientHook hook) {
                return new Client(hook);
            }
        }

        public static class Client
                extends org.capnproto.Capability.Client {
            public Client() {
            }

            public Client(org.capnproto.ClientHook hook) {
                super(hook);
            }

            public Client(org.capnproto.Capability.Client cap) {
                super(cap);
            }

            public Client(Server server) {
                super(server);
            }

            public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
                super(promise);
            }

            public Methods.registerUdpSession.Request registerUdpSessionRequest() {
                org.capnproto.Request<RegisterUdpSessionParams.Builder> result = newCall(RegisterUdpSessionParams.factory, 0x839445a59fb01686L, (short) 0);
                return () -> result;
            }

            public Methods.unregisterUdpSession.Request unregisterUdpSessionRequest() {
                org.capnproto.Request<UnregisterUdpSessionParams.Builder> result = newCall(UnregisterUdpSessionParams.factory, 0x839445a59fb01686L, (short) 1);
                return () -> result;
            }

            public static final class Methods {
                public static final class registerUdpSession {
                    public interface Request extends org.capnproto.Request<RegisterUdpSessionParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<RegisterUdpSessionResults.Reader>
                            implements RegisterUdpSessionResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(RegisterUdpSessionResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }

                public static final class unregisterUdpSession {
                    public interface Request extends org.capnproto.Request<UnregisterUdpSessionParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<UnregisterUdpSessionResults.Reader>
                            implements UnregisterUdpSessionResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(UnregisterUdpSessionResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }
            }
        }

        public static abstract class Server
                extends org.capnproto.Capability.Server {
            protected org.capnproto.DispatchCallResult dispatchCall(
                    long interfaceId, short methodId,
                    org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                if (interfaceId == 0x839445a59fb01686L) {
                    return this.dispatchCallInternal(methodId, context);
                } else {
                    return org.capnproto.Capability.Server.result(
                            org.capnproto.Capability.Server.internalUnimplemented("SessionManager", interfaceId));
                }
            }

            private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                switch (methodId) {
                    case 0:
                        return org.capnproto.Capability.Server.result(
                                this.registerUdpSession(org.capnproto.Capability.Server.internalGetTypedContext(
                                        RegisterUdpSessionParams.factory, RegisterUdpSessionResults.factory, context)));
                    case 1:
                        return org.capnproto.Capability.Server.result(
                                this.unregisterUdpSession(org.capnproto.Capability.Server.internalGetTypedContext(
                                        UnregisterUdpSessionParams.factory, UnregisterUdpSessionResults.factory, context)));
                    default:
                        return org.capnproto.Capability.Server.result(
                                org.capnproto.Capability.Server.internalUnimplemented("SessionManager", 0x839445a59fb01686L, methodId));
                }
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> registerUdpSession(org.capnproto.CallContext<RegisterUdpSessionParams.Reader, RegisterUdpSessionResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:SessionManager", "registerUdpSession", 0x839445a59fb01686L, (short) 0);
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> unregisterUdpSession(org.capnproto.CallContext<UnregisterUdpSessionParams.Reader, UnregisterUdpSessionResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:SessionManager", "unregisterUdpSession", 0x839445a59fb01686L, (short) 1);
            }

            protected Client thisCap() {
                return new Client(super.thisCap());
            }
        }

        public static class RegisterUdpSessionParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 2, (short) 3);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return SessionManager.RegisterUdpSessionParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasSessionId() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getSessionId() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setSessionId(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setSessionId(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initSessionId(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }

                public final boolean hasDstIp() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Data.Builder getDstIp() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public final void setDstIp(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 1, value);
                }

                public final void setDstIp(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initDstIp(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 1, size);
                }

                public final short getDstPort() {
                    return _getShortField(0);
                }

                public final void setDstPort(short value) {
                    _setShortField(0, value);
                }

                public final long getCloseAfterIdleHint() {
                    return _getLongField(1);
                }

                public final void setCloseAfterIdleHint(long value) {
                    _setLongField(1, value);
                }

                public final boolean hasTraceContext() {
                    return !_pointerFieldIsNull(2);
                }

                public final org.capnproto.Text.Builder getTraceContext() {
                    return _getPointerField(org.capnproto.Text.factory, 2, Schemas.b_904e297b87fbecea.buffer, 101, 0);
                }

                public final void setTraceContext(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 2, value);
                }

                public final void setTraceContext(String value) {
                    _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
                }

                public final org.capnproto.Text.Builder initTraceContext(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 2, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasSessionId() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getSessionId() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public boolean hasDstIp() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Data.Reader getDstIp() {
                    return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
                }

                public final short getDstPort() {
                    return _getShortField(0);
                }

                public final long getCloseAfterIdleHint() {
                    return _getLongField(1);
                }

                public boolean hasTraceContext() {
                    return !_pointerFieldIsNull(2);
                }

                public org.capnproto.Text.Reader getTraceContext() {
                    return _getPointerField(org.capnproto.Text.factory, 2, Schemas.b_904e297b87fbecea.buffer, 101, 0);
                }

            }
        }

        public static class RegisterUdpSessionResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return SessionManager.RegisterUdpSessionResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.RegisterUdpSessionResponse.factory, 0, null, 0);
                }

            }
        }

        public static class UnregisterUdpSessionParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 2);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return SessionManager.UnregisterUdpSessionParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final boolean hasSessionId() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getSessionId() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setSessionId(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setSessionId(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initSessionId(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }

                public final boolean hasMessage() {
                    return !_pointerFieldIsNull(1);
                }

                public final org.capnproto.Text.Builder getMessage() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public final void setMessage(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }

                public final void setMessage(String value) {
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }

                public final org.capnproto.Text.Builder initMessage(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasSessionId() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getSessionId() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public boolean hasMessage() {
                    return !_pointerFieldIsNull(1);
                }

                public org.capnproto.Text.Reader getMessage() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

            }
        }

        public static class UnregisterUdpSessionResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 0);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return SessionManager.UnregisterUdpSessionResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }
        }
    }

    public static class UpdateConfigurationResponse {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 1);
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public interface Pipeline extends org.capnproto.Pipeline {
        }

        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }

            public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final org.capnproto.StructSize structSize() {
                return UpdateConfigurationResponse.STRUCT_SIZE;
            }

            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }

        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                super(segment, data, pointers, dataSize, pointerCount);
            }

            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }

            public final int getLatestAppliedVersion() {
                return _getIntField(0);
            }

            public final void setLatestAppliedVersion(int value) {
                _setIntField(0, value);
            }

            public final boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public final org.capnproto.Text.Builder getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public final void setErr(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }

            public final void setErr(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }

            public final org.capnproto.Text.Builder initErr(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final int getLatestAppliedVersion() {
                return _getIntField(0);
            }

            public boolean hasErr() {
                return !_pointerFieldIsNull(0);
            }

            public org.capnproto.Text.Reader getErr() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

        }
    }

    public static class ConfigurationManager {
        public static final Factory factory = new Factory();

        public static final class Factory
                extends org.capnproto.Capability.Factory<Client> {
            public Factory() {
            }

            public final Client newClient(org.capnproto.ClientHook hook) {
                return new Client(hook);
            }
        }

        public static class Client
                extends org.capnproto.Capability.Client {
            public Client() {
            }

            public Client(org.capnproto.ClientHook hook) {
                super(hook);
            }

            public Client(org.capnproto.Capability.Client cap) {
                super(cap);
            }

            public Client(Server server) {
                super(server);
            }

            public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
                super(promise);
            }

            public Methods.updateConfiguration.Request updateConfigurationRequest() {
                org.capnproto.Request<UpdateConfigurationParams.Builder> result = newCall(UpdateConfigurationParams.factory, 0xb48edfbdaa25db04L, (short) 0);
                return () -> result;
            }

            public static final class Methods {
                public static final class updateConfiguration {
                    public interface Request extends org.capnproto.Request<UpdateConfigurationParams.Builder> {
                        default Response send() {
                            return new Response(this.sendInternal());
                        }
                    }

                    public static final class Response
                            extends org.capnproto.RemotePromise<UpdateConfigurationResults.Reader>
                            implements UpdateConfigurationResults.Pipeline {
                        public Response(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> response) {
                            super(UpdateConfigurationResults.factory, response);
                        }

                        public org.capnproto.AnyPointer.Pipeline typelessPipeline() {
                            return this.pipeline();
                        }
                    }
                }
            }
        }

        public static abstract class Server
                extends org.capnproto.Capability.Server {
            protected org.capnproto.DispatchCallResult dispatchCall(
                    long interfaceId, short methodId,
                    org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                if (interfaceId == 0xb48edfbdaa25db04L) {
                    return this.dispatchCallInternal(methodId, context);
                } else {
                    return org.capnproto.Capability.Server.result(
                            org.capnproto.Capability.Server.internalUnimplemented("ConfigurationManager", interfaceId));
                }
            }

            private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                switch (methodId) {
                    case 0:
                        return org.capnproto.Capability.Server.result(
                                this.updateConfiguration(org.capnproto.Capability.Server.internalGetTypedContext(
                                        UpdateConfigurationParams.factory, UpdateConfigurationResults.factory, context)));
                    default:
                        return org.capnproto.Capability.Server.result(
                                org.capnproto.Capability.Server.internalUnimplemented("ConfigurationManager", 0xb48edfbdaa25db04L, methodId));
                }
            }

            protected java.util.concurrent.CompletableFuture<java.lang.Void> updateConfiguration(org.capnproto.CallContext<UpdateConfigurationParams.Reader, UpdateConfigurationResults.Builder> context) {
                return org.capnproto.Capability.Server.internalUnimplemented(
                        "src/main/capnp/tunnelrpc.capnp:ConfigurationManager", "updateConfiguration", 0xb48edfbdaa25db04L, (short) 0);
            }

            protected Client thisCap() {
                return new Client(super.thisCap());
            }
        }

        public static class UpdateConfigurationParams {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 1, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return ConfigurationManager.UpdateConfigurationParams.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final int getVersion() {
                    return _getIntField(0);
                }

                public final void setVersion(int value) {
                    _setIntField(0, value);
                }

                public final boolean hasConfig() {
                    return !_pointerFieldIsNull(0);
                }

                public final org.capnproto.Data.Builder getConfig() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

                public final void setConfig(org.capnproto.Data.Reader value) {
                    _setPointerField(org.capnproto.Data.factory, 0, value);
                }

                public final void setConfig(byte[] value) {
                    _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
                }

                public final org.capnproto.Data.Builder initConfig(int size) {
                    return _initPointerField(org.capnproto.Data.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final int getVersion() {
                    return _getIntField(0);
                }

                public boolean hasConfig() {
                    return !_pointerFieldIsNull(0);
                }

                public org.capnproto.Data.Reader getConfig() {
                    return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
                }

            }
        }

        public static class UpdateConfigurationResults {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short) 0, (short) 1);
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder, Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public interface Pipeline extends org.capnproto.Pipeline {
                default octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.Pipeline getResult() {
                    org.capnproto.AnyPointer.Pipeline pipeline = this.typelessPipeline().getPointerField((short) 0);
                    return () -> pipeline;
                }
            }

            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }

                public final Reader constructReader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final org.capnproto.StructSize structSize() {
                    return ConfigurationManager.UpdateConfigurationResults.STRUCT_SIZE;
                }

                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }

            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount) {
                    super(segment, data, pointers, dataSize, pointerCount);
                }

                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.Builder getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.factory, 0, null, 0);
                }

                public final void setResult(octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.Reader value) {
                    _setPointerField(octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.factory, 0, value);
                }

                public final octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.Builder initResult() {
                    return _initPointerField(octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.factory, 0, 0);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasResult() {
                    return !_pointerFieldIsNull(0);
                }

                public octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.Reader getResult() {
                    return _getPointerField(octi.wanparty.tunnelrpc.TunnelRPC.UpdateConfigurationResponse.factory, 0, null, 0);
                }

            }
        }
    }

    public static class CloudflaredServer {
        public static final Factory factory = new Factory();

        public static final class Factory
                extends org.capnproto.Capability.Factory<Client> {
            public Factory() {
            }

            public final Client newClient(org.capnproto.ClientHook hook) {
                return new Client(hook);
            }
        }

        public static class Client
                extends octi.wanparty.tunnelrpc.TunnelRPC.SessionManager.Client {
            public Client() {
            }

            public Client(org.capnproto.ClientHook hook) {
                super(hook);
            }

            public Client(org.capnproto.Capability.Client cap) {
                super(cap);
            }

            public Client(Server server) {
                super(server);
            }

            public Client(java.util.concurrent.CompletionStage<? extends Client> promise) {
                super(promise);
            }

            public static final class Methods {
            }
        }

        public static abstract class Server
                extends octi.wanparty.tunnelrpc.TunnelRPC.SessionManager.Server {
            protected org.capnproto.DispatchCallResult dispatchCall(
                    long interfaceId, short methodId,
                    org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                if (interfaceId == 0xf548cef9dea2a4a1L) {
                    return this.dispatchCallInternal(methodId, context);
                } else if (interfaceId == 0x839445a59fb01686L) {
                    return super.dispatchCall(interfaceId, methodId, context);
                } else if (interfaceId == 0xb48edfbdaa25db04L) {
                    return super.dispatchCall(interfaceId, methodId, context);
                } else {
                    return org.capnproto.Capability.Server.result(
                            org.capnproto.Capability.Server.internalUnimplemented("CloudflaredServer", interfaceId));
                }
            }

            private org.capnproto.DispatchCallResult dispatchCallInternal(short methodId, org.capnproto.CallContext<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Builder> context) {
                switch (methodId) {
                    default:
                        return org.capnproto.Capability.Server.result(
                                org.capnproto.Capability.Server.internalUnimplemented("CloudflaredServer", 0xf548cef9dea2a4a1L, methodId));
                }
            }

            protected Client thisCap() {
                return new Client(super.thisCap());
            }
        }
    }


    public static final class Schemas {
        public static final org.capnproto.SegmentReader b_c082ef6e0d42ed1d =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u001d\u00ed\u0042\r\u006e\u00ef\u0082\u00c0" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0041" +
                                "\u0075\u0074\u0068\u0065\u006e\u0074\u0069\u0063" +
                                "\u0061\u0074\u0069\u006f\u006e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006b\u0065\u0079\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u006d\u0061\u0069\u006c\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0072\u0069\u0067\u0069\u006e\u0043\u0041" +
                                "\u004b\u0065\u0079\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f41a0f001ad49e46 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0046\u009e\u00d4\u001a\u0000\u000f\u001a\u00f4" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0006\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0052\u0065\u0067" +
                                "\u0069\u0073\u0074\u0072\u0061\u0074\u0069\u006f" +
                                "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d1\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d9\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f1\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fd\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0001\u0000\u0000\u0092\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u001c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0018\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0024\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0065\u0072\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0072\u006c\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u006f\u0067\u004c\u0069\u006e\u0065\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0065\u0072\u006d\u0061\u006e\u0065\u006e" +
                                "\u0074\u0046\u0061\u0069\u006c\u0075\u0072\u0065" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0075\u006e\u006e\u0065\u006c\u0049\u0044" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0074\u0072\u0079\u0041\u0066\u0074" +
                                "\u0065\u0072\u0053\u0065\u0063\u006f\u006e\u0064" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0076\u0065\u006e\u0074\u0044\u0069\u0067" +
                                "\u0065\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u006e\u0044\u0069\u0067\u0065" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c793e50592935b4a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u004a\u005b\u0093\u0092\u0005\u00e5\u0093\u00c7" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0008\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0017\u0003\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u004f\u0070\u0074\u0069\u006f" +
                                "\u006e\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0038\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0079\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0001\u0000\u0000\u001a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0001\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0098\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0098\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b1\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00bc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b9\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0018\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c1\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00cc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0019\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c9\u0001\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d1\u0001\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00dd\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e1\u0001\u0000\u0000\u00a2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006c\u0069\u0065\u006e\u0074\u0049\u0064" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0078\u0069\u0073\u0074\u0069\u006e\u0067" +
                                "\u0054\u0075\u006e\u006e\u0065\u006c\u0050\u006f" +
                                "\u006c\u0069\u0063\u0079\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u006d\u00cf\u00a2\u0036\u0095\u00cb\u0084" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u006f\u006f\u006c\u004e\u0061\u006d\u0065" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0061\u0067\u0073\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001a\u00b0\u003b\u00ae\u0042\u0064\u00d9\u00cb" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069" +
                                "\u006f\u006e\u0049\u0064\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0072\u0069\u0067\u0069\u006e\u004c\u006f" +
                                "\u0063\u0061\u006c\u0049\u0070\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0073\u0041\u0075\u0074\u006f\u0075\u0070" +
                                "\u0064\u0061\u0074\u0065\u0064\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0075\u006e\u0046\u0072\u006f\u006d\u0054" +
                                "\u0065\u0072\u006d\u0069\u006e\u0061\u006c\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006d\u0070\u0072\u0065\u0073\u0073" +
                                "\u0069\u006f\u006e\u0051\u0075\u0061\u006c\u0069" +
                                "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0075\u0069\u0064\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0075\u006d\u0050\u0072\u0065\u0076\u0069" +
                                "\u006f\u0075\u0073\u0041\u0074\u0074\u0065\u006d" +
                                "\u0070\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u0065\u0061\u0074\u0075\u0072\u0065\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_cbd96442ae3bb01a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u001a\u00b0\u003b\u00ae\u0042\u0064\u00d9\u00cb" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0061\u0067\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_84cb9536a2cf6d3c =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u003c\u006d\u00cf\u00a2\u0036\u0095\u00cb\u0084" +
                                "\u001f\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0045" +
                                "\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0050\u006f\u006c" +
                                "\u0069\u0063\u0079\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0067\u006e\u006f\u0072\u0065\u0000\u0000" +
                                "\u0064\u0069\u0073\u0063\u006f\u006e\u006e\u0065" +
                                "\u0063\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0000" + "");
        public static final org.capnproto.SegmentReader b_f2c68e2547ec3866 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0066\u0038\u00ec\u0047\u0025\u008e\u00c6\u00f2" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0072\u0076\u0065\u0072\u0049\u006e\u0066" +
                                "\u006f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" +
                                "\u004e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_82c325a07ad22a65 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0065\u002a\u00d2\u007a\u00a0\u0025\u00c3\u0082" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0041" +
                                "\u0075\u0074\u0068\u0065\u006e\u0074\u0069\u0063" +
                                "\u0061\u0074\u0065\u0052\u0065\u0073\u0070\u006f" +
                                "\u006e\u0073\u0065\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0070\u0065\u0072\u006d\u0061\u006e\u0065\u006e" +
                                "\u0074\u0045\u0072\u0072\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0074\u0072\u0079\u0061\u0062\u006c" +
                                "\u0065\u0045\u0072\u0072\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006a\u0077\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u006f\u0075\u0072\u0073\u0055\u006e\u0074" +
                                "\u0069\u006c\u0052\u0065\u0066\u0072\u0065\u0073" +
                                "\u0068\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_83ced0145b2f114b =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u004b\u0011\u002f\u005b\u0014\u00d0\u00ce\u0083" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006c\u0069\u0065\u006e\u0074\u0049\u006e\u0066" +
                                "\u006f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006c\u0069\u0065\u006e\u0074\u0049\u0064" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u0065\u0061\u0074\u0075\u0072\u0065\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0072\u0063\u0068\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b4bf9861fe035d04 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0004\u005d\u0003\u00fe\u0061\u0098\u00bf\u00b4" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f" +
                                "\u006e\u004f\u0070\u0074\u0069\u006f\u006e\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006c\u0069\u0065\u006e\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004b\u0011\u002f\u005b\u0014\u00d0\u00ce\u0083" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0072\u0069\u0067\u0069\u006e\u004c\u006f" +
                                "\u0063\u0061\u006c\u0049\u0070\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0070\u006c\u0061\u0063\u0065\u0045" +
                                "\u0078\u0069\u0073\u0074\u0069\u006e\u0067\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006d\u0070\u0072\u0065\u0073\u0073" +
                                "\u0069\u006f\u006e\u0051\u0075\u0061\u006c\u0069" +
                                "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0075\u006d\u0050\u0072\u0065\u0076\u0069" +
                                "\u006f\u0075\u0073\u0041\u0074\u0074\u0065\u006d" +
                                "\u0070\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_dbaa9d03d52b62dc =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00dc\u0062\u002b\u00d5\u0003\u009d\u00aa\u00db" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f" +
                                "\u006e\u0052\u0065\u0073\u0070\u006f\u006e\u0073" +
                                "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\"\u0076\u0025\u0060\u00c2\u00c5\u00b3\u0097" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_97b3c5c260257622 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\"\u0076\u0025\u0060\u00c2\u00c5\u00b3\u0097" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00dc\u0062\u002b\u00d5\u0003\u009d\u00aa\u00db" +
                                "\u0001\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ca\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f" +
                                "\u006e\u0052\u0065\u0073\u0070\u006f\u006e\u0073" +
                                "\u0065\u002e\u0072\u0065\u0073\u0075\u006c\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0065\u0072\u0072\u006f\u0072\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0086\u00db\u005e\u0078\u00d2\u0083\u00f3\u00f5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069" +
                                "\u006f\u006e\u0044\u0065\u0074\u0061\u0069\u006c" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008a\u00c1\u009a\u002b\u0008\u009f\u00f3\u00b5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f5f383d2785edb86 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0086\u00db\u005e\u0078\u00d2\u0083\u00f3\u00f5" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u007a\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f" +
                                "\u006e\u0045\u0072\u0072\u006f\u0072\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0040\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0051\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u0061\u0075\u0073\u0065\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0074\u0072\u0079\u0041\u0066\u0074" +
                                "\u0065\u0072\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0068\u006f\u0075\u006c\u0064\u0052\u0065" +
                                "\u0074\u0072\u0079\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b5f39f082b9ac18a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u008a\u00c1\u009a\u002b\u0008\u009f\u00f3\u00b5" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f" +
                                "\u006e\u0044\u0065\u0074\u0061\u0069\u006c\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0051\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0054\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u0075\u0069\u0064\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" +
                                "\u004e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0075\u006e\u006e\u0065\u006c\u0049\u0073" +
                                "\u0052\u0065\u006d\u006f\u0074\u0065\u006c\u0079" +
                                "\u004d\u0061\u006e\u0061\u0067\u0065\u0064\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_9496331ab9cd463f =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u003f\u0046\u00cd\u00b9\u001a\u0033\u0096\u0094" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0041\u0075\u0074" +
                                "\u0068\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0061\u0063\u0063\u006f\u0075\u006e\u0074\u0054" +
                                "\u0061\u0067\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0075\u006e\u006e\u0065\u006c\u0053\u0065" +
                                "\u0063\u0072\u0065\u0074\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f71695ec7fe85497 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0097\u0054\u00e8\u007f\u00ec\u0095\u0016\u00f7" +
                                "\u001f\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
                                "\u00bd\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ee\u00a6\u00ea\u008f\u00ec\u006d\u0064\u00e6" +
                                "\u0017\u001f\r\u0045\"\u00d8\u0050\u00ea" +
                                "\u0051\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d0\u0007\u00a3\u0031\u0044\u007f\u00cb\u00f9" +
                                "\u00ad\u001e\u004b\u0009\u0078\u00e5\u0046\u00b0" +
                                "\u0041\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0036\u006a\u0087\u0011\u00e3\u00d6\u00c5" +
                                "\u00be\u00d7\u0097\u0068\u005d\u00ae\u00ce\u00e5" +
                                "\u0031\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072" +
                                "\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069" +
                                "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0075\u006e\u0072\u0065\u0067\u0069\u0073\u0074" +
                                "\u0065\u0072\u0043\u006f\u006e\u006e\u0065\u0063" +
                                "\u0074\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0075\u0070\u0064\u0061\u0074\u0065\u004c\u006f" +
                                "\u0063\u0061\u006c\u0043\u006f\u006e\u0066\u0069" +
                                "\u0067\u0075\u0072\u0061\u0074\u0069\u006f\u006e" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
        public static final org.capnproto.SegmentReader b_e6646dec8feaa6ee =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00ee\u00a6\u00ea\u008f\u00ec\u006d\u0064\u00e6" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0062\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0072\u0065\u0067\u0069\u0073\u0074" +
                                "\u0065\u0072\u0043\u006f\u006e\u006e\u0065\u0063" +
                                "\u0074\u0069\u006f\u006e\u0024\u0050\u0061\u0072" +
                                "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0061\u0075\u0074\u0068\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003f\u0046\u00cd\u00b9\u001a\u0033\u0096\u0094" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0075\u006e\u006e\u0065\u006c\u0049\u0064" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u006e\u0049\u006e\u0064\u0065" +
                                "\u0078\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0070\u0074\u0069\u006f\u006e\u0073\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u005d\u0003\u00fe\u0061\u0098\u00bf\u00b4" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ea50d822450d1f17 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0017\u001f\r\u0045\"\u00d8\u0050\u00ea" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u006a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0072\u0065\u0067\u0069\u0073\u0074" +
                                "\u0065\u0072\u0043\u006f\u006e\u006e\u0065\u0063" +
                                "\u0074\u0069\u006f\u006e\u0024\u0052\u0065\u0073" +
                                "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00dc\u0062\u002b\u00d5\u0003\u009d\u00aa\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f9cb7f4431a307d0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00d0\u0007\u00a3\u0031\u0044\u007f\u00cb\u00f9" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0072\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0075\u006e\u0072\u0065\u0067\u0069" +
                                "\u0073\u0074\u0065\u0072\u0043\u006f\u006e\u006e" +
                                "\u0065\u0063\u0074\u0069\u006f\u006e\u0024\u0050" +
                                "\u0061\u0072\u0061\u006d\u0073\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b046e578094b1ead =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00ad\u001e\u004b\u0009\u0078\u00e5\u0046\u00b0" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u007a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0075\u006e\u0072\u0065\u0067\u0069" +
                                "\u0073\u0074\u0065\u0072\u0043\u006f\u006e\u006e" +
                                "\u0065\u0063\u0074\u0069\u006f\u006e\u0024\u0052" +
                                "\u0065\u0073\u0075\u006c\u0074\u0073\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c5d6e311876a3604 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0004\u0036\u006a\u0087\u0011\u00e3\u00d6\u00c5" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0092\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0075\u0070\u0064\u0061\u0074\u0065" +
                                "\u004c\u006f\u0063\u0061\u006c\u0043\u006f\u006e" +
                                "\u0066\u0069\u0067\u0075\u0072\u0061\u0074\u0069" +
                                "\u006f\u006e\u0024\u0050\u0061\u0072\u0061\u006d" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006f\u006e\u0066\u0069\u0067\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e5ceae5d6897d7be =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00be\u00d7\u0097\u0068\u005d\u00ae\u00ce\u00e5" +
                                "\u0032\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u009a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u002e\u0075\u0070\u0064\u0061\u0074\u0065" +
                                "\u004c\u006f\u0063\u0061\u006c\u0043\u006f\u006e" +
                                "\u0066\u0069\u0067\u0075\u0072\u0061\u0074\u0069" +
                                "\u006f\u006e\u0024\u0052\u0065\u0073\u0075\u006c" +
                                "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ea58385c65416035 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0035\u0060\u0041\u0065\\\u0038\u0058\u00ea" +
                                "\u001f\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0087\u0001\u0000\u0000" +
                                "\u003d\u0001\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0018\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0049\u0001\u00dc\u00c0\u0031\u0004\u00b7" +
                                "\u008e\u007e\u0044\u004f\u0039\"\u00c1\u00f2" +
                                "\u00b1\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a9\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u00e5\u0061\u0019\u0080\u00d6\u003e\u00dc" +
                                "\u004e\u0056\u005b\u006a\u0009\u007d\u00e3\u00e3" +
                                "\u009d\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cf\u002c\u00bc\u00ba\u0090\u00b3\u0087\u009b" +
                                "\u0094\u00d8\u00bd\u004e\u006d\u0091\u009a\u00a2" +
                                "\u0089\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u00da\u00e5\u004f\u004d\u00b2\u0066\u00a7" +
                                "\u007c\u00ef\u0099\u0048\u008f\\\u00ac\u00fe" +
                                "\u0079\u0000\u0000\u0000\n\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f3\u0094\u0018\u00ab\u00a1\u00ce\u00c8\u0085" +
                                "\u0096\u0007\u009c\u00e3\u0080\u00df\u005e\u00fc" +
                                "\u0071\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0049\u00f7\u006d\u0055\u00a3\u0053\u00a3" +
                                "\u00e3\u002d\u00b1\u007b\u00e9\u008d\u00d1\u00d4" +
                                "\u005d\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072" +
                                "\u0054\u0075\u006e\u006e\u0065\u006c\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0067\u0065\u0074\u0053\u0065\u0072\u0076\u0065" +
                                "\u0072\u0049\u006e\u0066\u006f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0075\u006e\u0072\u0065\u0067\u0069\u0073\u0074" +
                                "\u0065\u0072\u0054\u0075\u006e\u006e\u0065\u006c" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u006f\u0062\u0073\u006f\u006c\u0065\u0074\u0065" +
                                "\u0044\u0065\u0063\u006c\u0061\u0072\u0061\u0074" +
                                "\u0069\u0076\u0065\u0054\u0075\u006e\u006e\u0065" +
                                "\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0061\u0075\u0074\u0068\u0065\u006e\u0074\u0069" +
                                "\u0063\u0061\u0074\u0065\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0072\u0065\u0063\u006f\u006e\u006e\u0065\u0063" +
                                "\u0074\u0054\u0075\u006e\u006e\u0065\u006c\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0097\u0054\u00e8\u007f\u00ec\u0095\u0016\u00f7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b70431c0dc014915 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0015\u0049\u0001\u00dc\u00c0\u0031\u0004\u00b7" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0012\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0072\u0065\u0067\u0069" +
                                "\u0073\u0074\u0065\u0072\u0054\u0075\u006e\u006e" +
                                "\u0065\u006c\u0024\u0050\u0061\u0072\u0061\u006d" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006f\u0072\u0069\u0067\u0069\u006e\u0043\u0065" +
                                "\u0072\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u006f\u0073\u0074\u006e\u0061\u006d\u0065" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0070\u0074\u0069\u006f\u006e\u0073\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004a\u005b\u0093\u0092\u0005\u00e5\u0093\u00c7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f2c122394f447e8e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u008e\u007e\u0044\u004f\u0039\"\u00c1\u00f2" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0072\u0065\u0067\u0069" +
                                "\u0073\u0074\u0065\u0072\u0054\u0075\u006e\u006e" +
                                "\u0065\u006c\u0024\u0052\u0065\u0073\u0075\u006c" +
                                "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0046\u009e\u00d4\u001a\u0000\u000f\u001a\u00f4" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_dc3ed6801961e502 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0002\u00e5\u0061\u0019\u0080\u00d6\u003e\u00dc" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0067\u0065\u0074\u0053" +
                                "\u0065\u0072\u0076\u0065\u0072\u0049\u006e\u0066" +
                                "\u006f\u0024\u0050\u0061\u0072\u0061\u006d\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e3e37d096a5b564e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u004e\u0056\u005b\u006a\u0009\u007d\u00e3\u00e3" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0012\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0067\u0065\u0074\u0053" +
                                "\u0065\u0072\u0076\u0065\u0072\u0049\u006e\u0066" +
                                "\u006f\u0024\u0052\u0065\u0073\u0075\u006c\u0074" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u0038\u00ec\u0047\u0025\u008e\u00c6\u00f2" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_9b87b390babc2ccf =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00cf\u002c\u00bc\u00ba\u0090\u00b3\u0087\u009b" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0075\u006e\u0072\u0065" +
                                "\u0067\u0069\u0073\u0074\u0065\u0072\u0054\u0075" +
                                "\u006e\u006e\u0065\u006c\u0024\u0050\u0061\u0072" +
                                "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u001c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0067\u0072\u0061\u0063\u0065\u0050\u0065\u0072" +
                                "\u0069\u006f\u0064\u004e\u0061\u006e\u006f\u0053" +
                                "\u0065\u0063\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a29a916d4ebdd894 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0094\u00d8\u00bd\u004e\u006d\u0091\u009a\u00a2" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u002a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0075\u006e\u0072\u0065" +
                                "\u0067\u0069\u0073\u0074\u0065\u0072\u0054\u0075" +
                                "\u006e\u006e\u0065\u006c\u0024\u0052\u0065\u0073" +
                                "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a766b24d4fe5da35 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0035\u00da\u00e5\u004f\u004d\u00b2\u0066\u00a7" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00a2\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u006f\u0062\u0073\u006f" +
                                "\u006c\u0065\u0074\u0065\u0044\u0065\u0063\u006c" +
                                "\u0061\u0072\u0061\u0074\u0069\u0076\u0065\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0043\u006f\u006e" +
                                "\u006e\u0065\u0063\u0074\u0024\u0050\u0061\u0072" +
                                "\u0061\u006d\u0073\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_feac5c8f4899ef7c =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u007c\u00ef\u0099\u0048\u008f\\\u00ac\u00fe" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00aa\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u006f\u0062\u0073\u006f" +
                                "\u006c\u0065\u0074\u0065\u0044\u0065\u0063\u006c" +
                                "\u0061\u0072\u0061\u0074\u0069\u0076\u0065\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0043\u006f\u006e" +
                                "\u006e\u0065\u0063\u0074\u0024\u0052\u0065\u0073" +
                                "\u0075\u006c\u0074\u0073\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_85c8cea1ab1894f3 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00f3\u0094\u0018\u00ab\u00a1\u00ce\u00c8\u0085" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0002\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0061\u0075\u0074\u0068" +
                                "\u0065\u006e\u0074\u0069\u0063\u0061\u0074\u0065" +
                                "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006f\u0072\u0069\u0067\u0069\u006e\u0043\u0065" +
                                "\u0072\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u006f\u0073\u0074\u006e\u0061\u006d\u0065" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0070\u0074\u0069\u006f\u006e\u0073\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004a\u005b\u0093\u0092\u0005\u00e5\u0093\u00c7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_fc5edf80e39c0796 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0096\u0007\u009c\u00e3\u0080\u00df\u005e\u00fc" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0061\u0075\u0074\u0068" +
                                "\u0065\u006e\u0074\u0069\u0063\u0061\u0074\u0065" +
                                "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u002a\u00d2\u007a\u00a0\u0025\u00c3\u0082" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a353a3556df74984 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0084\u0049\u00f7\u006d\u0055\u00a3\u0053\u00a3" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0072\u0065\u0063\u006f" +
                                "\u006e\u006e\u0065\u0063\u0074\u0054\u0075\u006e" +
                                "\u006e\u0065\u006c\u0024\u0050\u0061\u0072\u0061" +
                                "\u006d\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0090\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u009c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0099\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006a\u0077\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0076\u0065\u006e\u0074\u0044\u0069\u0067" +
                                "\u0065\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u006e\u0044\u0069\u0067\u0065" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u006f\u0073\u0074\u006e\u0061\u006d\u0065" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u0070\u0074\u0069\u006f\u006e\u0073\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004a\u005b\u0093\u0092\u0005\u00e5\u0093\u00c7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d4d18de97bb12de3 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00e3\u002d\u00b1\u007b\u00e9\u008d\u00d1\u00d4" +
                                "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0054" +
                                "\u0075\u006e\u006e\u0065\u006c\u0053\u0065\u0072" +
                                "\u0076\u0065\u0072\u002e\u0072\u0065\u0063\u006f" +
                                "\u006e\u006e\u0065\u0063\u0074\u0054\u0075\u006e" +
                                "\u006e\u0065\u006c\u0024\u0052\u0065\u0073\u0075" +
                                "\u006c\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0046\u009e\u00d4\u001a\u0000\u000f\u001a\u00f4" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ab6d5210c1f26687 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0087\u0066\u00f2\u00c1\u0010\u0052\u006d\u00ab" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00d2\u0001\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0052" +
                                "\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0055" +
                                "\u0064\u0070\u0053\u0065\u0073\u0073\u0069\u006f" +
                                "\u006e\u0052\u0065\u0073\u0070\u006f\u006e\u0073" +
                                "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0065\u0072\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0070\u0061\u006e\u0073\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_839445a59fb01686 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0086\u0016\u00b0\u009f\u00a5\u0045\u0094\u0083" +
                                "\u001f\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0087\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0073\u0073\u0069\u006f\u006e\u004d\u0061" +
                                "\u006e\u0061\u0067\u0065\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ea\u00ec\u00fb\u0087\u007b\u0029\u004e\u0090" +
                                "\u00cd\u00f5\u005b\u00f4\u00b4\u00c6\u0035\u0086" +
                                "\u0031\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f6\u000e\u009b\u00ce\u0075\u0043\u00b7\u0096" +
                                "\u0076\u00b6\u0091\u0058\u00ab\u00c4\u004e\u00f2" +
                                "\u0021\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072" +
                                "\u0055\u0064\u0070\u0053\u0065\u0073\u0073\u0069" +
                                "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0075\u006e\u0072\u0065\u0067\u0069\u0073\u0074" +
                                "\u0065\u0072\u0055\u0064\u0070\u0053\u0065\u0073" +
                                "\u0073\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
        public static final org.capnproto.SegmentReader b_904e297b87fbecea =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00ea\u00ec\u00fb\u0087\u007b\u0029\u004e\u0090" +
                                "\u002e\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0073\u0073\u0069\u006f\u006e\u004d\u0061" +
                                "\u006e\u0061\u0067\u0065\u0072\u002e\u0072\u0065" +
                                "\u0067\u0069\u0073\u0074\u0065\u0072\u0055\u0064" +
                                "\u0070\u0053\u0065\u0073\u0073\u0069\u006f\u006e" +
                                "\u0024\u0050\u0061\u0072\u0061\u006d\u0073\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0090\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u009c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0099\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0073\u0065\u0073\u0073\u0069\u006f\u006e\u0049" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0073\u0074\u0049\u0070\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0073\u0074\u0050\u006f\u0072\u0074\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006c\u006f\u0073\u0065\u0041\u0066\u0074" +
                                "\u0065\u0072\u0049\u0064\u006c\u0065\u0048\u0069" +
                                "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0072\u0061\u0063\u0065\u0043\u006f\u006e" +
                                "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_8635c6b4f45bf5cd =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00cd\u00f5\u005b\u00f4\u00b4\u00c6\u0035\u0086" +
                                "\u002e\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u004a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0073\u0073\u0069\u006f\u006e\u004d\u0061" +
                                "\u006e\u0061\u0067\u0065\u0072\u002e\u0072\u0065" +
                                "\u0067\u0069\u0073\u0074\u0065\u0072\u0055\u0064" +
                                "\u0070\u0053\u0065\u0073\u0073\u0069\u006f\u006e" +
                                "\u0024\u0052\u0065\u0073\u0075\u006c\u0074\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0087\u0066\u00f2\u00c1\u0010\u0052\u006d\u00ab" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_96b74375ce9b0ef6 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00f6\u000e\u009b\u00ce\u0075\u0043\u00b7\u0096" +
                                "\u002e\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0073\u0073\u0069\u006f\u006e\u004d\u0061" +
                                "\u006e\u0061\u0067\u0065\u0072\u002e\u0075\u006e" +
                                "\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072" +
                                "\u0055\u0064\u0070\u0053\u0065\u0073\u0073\u0069" +
                                "\u006f\u006e\u0024\u0050\u0061\u0072\u0061\u006d" +
                                "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0073\u0065\u0073\u0073\u0069\u006f\u006e\u0049" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0065\u0073\u0073\u0061\u0067\u0065\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f24ec4ab5891b676 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0076\u00b6\u0091\u0058\u00ab\u00c4\u004e\u00f2" +
                                "\u002e\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u005a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0053" +
                                "\u0065\u0073\u0073\u0069\u006f\u006e\u004d\u0061" +
                                "\u006e\u0061\u0067\u0065\u0072\u002e\u0075\u006e" +
                                "\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072" +
                                "\u0055\u0064\u0070\u0053\u0065\u0073\u0073\u0069" +
                                "\u006f\u006e\u0024\u0052\u0065\u0073\u0075\u006c" +
                                "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_db58ff694ba05cf9 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00f9\\\u00a0\u004b\u0069\u00ff\u0058\u00db" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0055" +
                                "\u0070\u0064\u0061\u0074\u0065\u0043\u006f\u006e" +
                                "\u0066\u0069\u0067\u0075\u0072\u0061\u0074\u0069" +
                                "\u006f\u006e\u0052\u0065\u0073\u0070\u006f\u006e" +
                                "\u0073\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006c\u0061\u0074\u0065\u0073\u0074\u0041\u0070" +
                                "\u0070\u006c\u0069\u0065\u0064\u0056\u0065\u0072" +
                                "\u0073\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0072\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b48edfbdaa25db04 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0004\u00db\u0025\u00aa\u00bd\u00df\u008e\u00b4" +
                                "\u001f\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u0066\u0069\u0067\u0075\u0072\u0061" +
                                "\u0074\u0069\u006f\u006e\u004d\u0061\u006e\u0061" +
                                "\u0067\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u00ca\u00a3\u0026\u0025\u00ca\u0077\u00b1" +
                                "\u003e\u0037\u00b3\u008e\u0044\u0096\u0080\u0095" +
                                "\u0011\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0075\u0070\u0064\u0061\u0074\u0065\u0043\u006f" +
                                "\u006e\u0066\u0069\u0067\u0075\u0072\u0061\u0074" +
                                "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
        public static final org.capnproto.SegmentReader b_b177ca2526a3ca76 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0076\u00ca\u00a3\u0026\u0025\u00ca\u0077\u00b1" +
                                "\u0034\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u007a\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u0066\u0069\u0067\u0075\u0072\u0061" +
                                "\u0074\u0069\u006f\u006e\u004d\u0061\u006e\u0061" +
                                "\u0067\u0065\u0072\u002e\u0075\u0070\u0064\u0061" +
                                "\u0074\u0065\u0043\u006f\u006e\u0066\u0069\u0067" +
                                "\u0075\u0072\u0061\u0074\u0069\u006f\u006e\u0024" +
                                "\u0050\u0061\u0072\u0061\u006d\u0073\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u006e\u0066\u0069\u0067\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_958096448eb3373e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u003e\u0037\u00b3\u008e\u0044\u0096\u0080\u0095" +
                                "\u0034\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0082\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006f\u006e\u0066\u0069\u0067\u0075\u0072\u0061" +
                                "\u0074\u0069\u006f\u006e\u004d\u0061\u006e\u0061" +
                                "\u0067\u0065\u0072\u002e\u0075\u0070\u0064\u0061" +
                                "\u0074\u0065\u0043\u006f\u006e\u0066\u0069\u0067" +
                                "\u0075\u0072\u0061\u0074\u0069\u006f\u006e\u0024" +
                                "\u0052\u0065\u0073\u0075\u006c\u0074\u0073\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0072\u0065\u0073\u0075\u006c\u0074\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f9\\\u00a0\u004b\u0069\u00ff\u0058\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f548cef9dea2a4a1 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00a1\u00a4\u00a2\u00de\u00f9\u00ce\u0048\u00f5" +
                                "\u001f\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u007e\u00bc\u004a\u0014\u00f9\u0074\u0082\u00db" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
                                "\u002f\u0063\u0061\u0070\u006e\u0070\u002f\u0074" +
                                "\u0075\u006e\u006e\u0065\u006c\u0072\u0070\u0063" +
                                "\u002e\u0063\u0061\u0070\u006e\u0070\u003a\u0043" +
                                "\u006c\u006f\u0075\u0064\u0066\u006c\u0061\u0072" +
                                "\u0065\u0064\u0053\u0065\u0072\u0076\u0065\u0072" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0005\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0086\u0016\u00b0\u009f\u00a5\u0045\u0094\u0083" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u00db\u0025\u00aa\u00bd\u00df\u008e\u00b4" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
    }
}

